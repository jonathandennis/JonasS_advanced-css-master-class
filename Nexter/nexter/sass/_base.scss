// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

// Responsive breakpoints

$bp-largest: 75em; //1200 px
$bp-large: 62.5em; //1000 px
$bp-medium: 50em; //800px 
$bp-small: 37.5em; //600px

// Global resets

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; //1rem = 10px
    // shrinks font size at 1200px
    @media only screen and (max-width: $bp-largest) {
        font-size: 50%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6;
}

//Grid

.container {
    display: grid;
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content); /* look at each section to see the best way to implement grids. Static sizes not very responsive so we use these variables to obtain what we want and be responsive at the same time. the 40vw is for the story section with pictures and content containers */
    
    //grid-template-columns: repeat(8, 1fr); /* columns can be very tricky, so best to start with 8 columns i.e. repeat(8, 1fr); similar workflow as standard frameworks like bootstrap, and then go from there. */
    grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; /* 8rem is the sidebar. 14rem comes from the optimal size of the features boxes, added minmax to make boxes adjustable. the 2x minmax(6rem, 1fr)'s are to center the main 8 columns between the sidebar and right edge of the page while giving a little margin as screen shrinks. This column will never get smaller than 6rem. These outer columns also allow us to break outside of the 8 column layout for full bleed items. */
    /* The ability to name the grid lines is especially helpful over numbering for when we need to change the grid layout as we rearrange to smaller screens. i.e. when the sidbar gets moves to the top at 1000px. Would be a nightmare if used numbers as they would all have changed. Names made it much much easier. */

    /* & > * {  // use for development for initial layout to be removed at completion of layout
        padding: 40px;
        font-size: 3rem;
    } */
    // change grid definition as we get smaller. Moves sidebar to top.
    @media only screen and (max-width: $bp-large) {
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
        grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
    }
    
    // change grid definition as we get smaller. Moves realtors from right side to inline with rest of sections.
    @media only screen and (max-width: $bp-medium) {
        grid-template-rows: 6rem calc(100vh - 6rem)/* min-content min-content min-content repeat(3, min-content)*/;       
    }
    // used calc to make the header plus top sidebar actual 100% needed to subtract sidebar height from header
    // as shrinking most became min-content, so best to remove.
}